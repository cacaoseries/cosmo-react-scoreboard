{"ast":null,"code":"var _jsxFileName = \"C:\\\\ldk\\\\scoreboard\\\\src\\\\App.js\";\n\n// import React from \"react\";\n// function component 만드는 법\n// 1. 대문자로 시작\n// 2. React Element를 리턴\nconst Header = props => {\n  console.log(props);\n  return React.createElement(\"header\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.title), React.createElement(\"span\", {\n    className: \"stats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.totalPlayers));\n}; // 클래스 컴포넌트\n// 1: React.Component 상속\n// 2: render() 오버라이딩 후 React Element를 리턴\n// 3: 속성 앞에 this\n\n\nclass Counter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // 생성자 없이 명시적으로 속성을 초기화\n      score: 30\n    };\n\n    this.increment = () => {\n      console.log('increment'); // this.state.score += 1; // UI 렌더링 안됨\n      // 1. 반드시 setState()로 상태 변경\n      // 2. 비동기로 동작하므로 콜백 함수로 상태 변경해야 함\n      // 3. Merge(Overwrite)된다\n      //this.setState({score: this.state.score + 1}); // 상속받은 메소드, setState()는 비동기 동작\n\n      this.setState(prevState => ({\n        // json의 중괄호로 인식하지 못하므로 { return } 생략하려면 소괄호로 json을 감싼다\n        score: prevState.score + 1 // overwriting 되므로 필요한 속성만 변경 가능\n\n      }));\n    };\n  }\n\n  // react event = 선언형 스타일: 함수 선언문을 우측에 배치\n  render() {\n    // overriding\n    return React.createElement(\"div\", {\n      className: \"counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"counter-action decrement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \" -\"), React.createElement(\"span\", {\n      className: \"counter-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.score), React.createElement(\"button\", {\n      className: \"counter-action increment\",\n      onClick: this.increment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \" +\"));\n  }\n\n}\n\nconst Player = props => {\n  return React.createElement(\"div\", {\n    className: \"player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"player-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"remove-player\",\n    onClick: () => props.removePlayer(props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" X \"), props.name), React.createElement(Counter, {\n    score: props.score,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }));\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      players: [{\n        name: \"KYH\",\n        score: 30,\n        id: 1\n      }, {\n        name: \"HTY\",\n        score: 40,\n        id: 2\n      }, {\n        name: \"KMG\",\n        score: 50,\n        id: 3\n      }, {\n        name: \"JDI\",\n        score: 60,\n        id: 4\n      }]\n    };\n\n    this.handleRemovePlayer = id => {\n      // 첫번째 parameter는 event\n      console.log('handleRemovePlayer: ', id);\n      this.setState(prevState => ({\n        players: prevState.players.filter(player => player.id !== id)\n      }));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"scoreboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Header, {\n      title: \"My Scoreboard\",\n      totalPlayers: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), // JSX Expression\n    this.state.players.map(player => {\n      // Function Expression, Don't type semicolon (;)\n      return (// JSX 리턴 해야하므로 JSX Expression 사용\n        React.createElement(Player, {\n          name: player.name,\n          score: player.score,\n          id: player.id,\n          key: player.id,\n          removePlayer: this.handleRemovePlayer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        })\n      );\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\ldk\\scoreboard\\src\\App.js"],"names":["Header","props","console","log","title","totalPlayers","Counter","React","Component","state","score","increment","setState","prevState","render","Player","removePlayer","id","name","App","players","handleRemovePlayer","filter","player","map","ReactDOM","document","getElementById"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// function component 만드는 법\n// 1. 대문자로 시작\n// 2. React Element를 리턴\n\nconst Header = (props) => {\n  console.log(props);\n  return (\n    <header className=\"header\">\n      <h1 className=\"h1\">{props.title}</h1>\n      <span className=\"stats\">{props.totalPlayers}</span>\n    </header>\n  );\n};\n\n// 클래스 컴포넌트\n// 1: React.Component 상속\n// 2: render() 오버라이딩 후 React Element를 리턴\n// 3: 속성 앞에 this\nclass Counter extends React.Component {\n  state = { // 생성자 없이 명시적으로 속성을 초기화\n    score: 30\n  };\n\n  increment = () => {\n    console.log('increment');\n    // this.state.score += 1; // UI 렌더링 안됨\n    // 1. 반드시 setState()로 상태 변경\n    // 2. 비동기로 동작하므로 콜백 함수로 상태 변경해야 함\n    // 3. Merge(Overwrite)된다\n    //this.setState({score: this.state.score + 1}); // 상속받은 메소드, setState()는 비동기 동작\n    this.setState((prevState) => ({ // json의 중괄호로 인식하지 못하므로 { return } 생략하려면 소괄호로 json을 감싼다\n      score: prevState.score + 1 // overwriting 되므로 필요한 속성만 변경 가능\n    }));\n  };\n\n  // react event = 선언형 스타일: 함수 선언문을 우측에 배치\n  render() { // overriding\n    return (\n      <div className=\"counter\">\n        <button className=\"counter-action decrement\"> -</button>\n        <span className=\"counter-score\">{this.state.score}</span>\n        <button className=\"counter-action increment\" onClick={this.increment}> +</button>\n      </div>\n    );\n  }\n}\n\nconst Player = (props) => {\n  return (\n    <div className=\"player\">\n\t\t\t<span className=\"player-name\">\n\t\t\t\t{/*3. 콜백 함수 호출*/}\n        <button className=\"remove-player\" onClick={() => props.removePlayer(props.id)}> X </button>\n        {props.name}\n\t\t\t</span>\n      <Counter score={props.score}/>\n    </div>\n  );\n};\n\nclass App extends React.Component {\n  state = {\n    players : [\n      {name: \"KYH\", score: 30, id: 1},\n      {name: \"HTY\", score: 40, id: 2},\n      {name: \"KMG\", score: 50, id: 3},\n      {name: \"JDI\", score: 60, id: 4}\n    ]\n  };\n  render() {\n    return (\n      <div className=\"scoreboard\">\n        <Header title=\"My Scoreboard\" totalPlayers={11} />\n\n        { // JSX Expression\n          this.state.players.map((player) => { // Function Expression, Don't type semicolon (;)\n            return ( // JSX 리턴 해야하므로 JSX Expression 사용\n              <Player name={player.name} score={player.score} id={player.id} key={player.id}\n                      removePlayer={this.handleRemovePlayer}/>\n            )\n          })\n        }\n      </div>\n    )\n  }\n  handleRemovePlayer = (id) => { // 첫번째 parameter는 event\n    console.log('handleRemovePlayer: ', id);\n    this.setState(prevState => ({\n      players : prevState.players.filter(player => player.id !== id)\n    }));\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}